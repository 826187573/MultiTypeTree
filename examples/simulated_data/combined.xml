<beast version='2.0'
       namespace='beast.evolution.alignment:beast.core:beast.core.parameter:beast.evolution.tree:beast.evolution.tree.coalescent:beast.core.util:beast.evolution.nuc:beast.evolution.operators:beast.evolution.sitemodel:beast.evolution.substitutionmodel:beast.evolution.likelihood:beast.evolution.migrationmodel:beast.math.distributions:master.beast'>


  <!-- TREE SIMULATION -->

  <alignment spec="Alignment" id="input_alignment"
             dataType="nucleotide">
    <sequence spec="Sequence" taxon="t1" value="?" />
    <sequence spec="Sequence" taxon="t2" value="?" />
    <sequence spec="Sequence" taxon="t3" value="?" />
    <sequence spec="Sequence" taxon="t4" value="?" />
    <sequence spec="Sequence" taxon="t5" value="?" />
    <sequence spec="Sequence" taxon="t6" value="?" />
    <sequence spec="Sequence" taxon="t7" value="?" />
    <sequence spec="Sequence" taxon="t8" value="?" />
    <sequence spec="Sequence" taxon="t9" value="?" />
    <sequence spec="Sequence" taxon="t10" value="?" />
  </alignment>

  <tree spec="MasterTree" id="true_tree">
    <model spec='InheritanceModel'>
      <populationType spec='PopulationType' typeName='X' dim="2" id='X'/>
      <reactionGroup spec='InheritanceReactionGroup' reactionGroupName='Coalescence'>
        <reaction spec='InheritanceReaction' rate="1.0">
          2X[0]:1 -> X[0]:1
        </reaction>
        <reaction spec='InheritanceReaction' rate="1.0">
          2X[1]:1 -> X[1]:1
        </reaction>
      </reactionGroup>
      <reactionGroup spec='InheritanceReactionGroup' reactionGroupName='Migration'>
        <reaction spec='InheritanceReaction' rate="0.1">
          X[0] -> X[1]
        </reaction>
        <reaction spec='InheritanceReaction' rate="0.1">
          X[1] -> X[0]
        </reaction>
      </reactionGroup>
    </model>

    <alignment idref='input_alignment'/>

    <initialState spec='InitState'>
      <lineageSeed spec='Individual' label="t1">
        <population spec='Population' type="@X" location="1"/>
      </lineageSeed>
      <lineageSeed spec='Individual' label="t2">
        <population spec='Population' type="@X" location="1"/>
      </lineageSeed>
      <lineageSeed spec='Individual' label="t3">
        <population spec='Population' type="@X" location="1"/>
      </lineageSeed>
      <lineageSeed spec='Individual' label="t4">
        <population spec='Population' type="@X" location="0"/>
      </lineageSeed>
      <lineageSeed spec='Individual' label="t5">
        <population spec='Population' type="@X" location="0"/>
      </lineageSeed>
      <lineageSeed spec='Individual' label="t6">
        <population spec='Population' type="@X" location="0"/>
      </lineageSeed>
      <lineageSeed spec='Individual' label="t7">
        <population spec='Population' type="@X" location="0"/>
      </lineageSeed>
      <lineageSeed spec='Individual' label="t8">
        <population spec='Population' type="@X" location="0"/>
      </lineageSeed>
      <lineageSeed spec='Individual' label="t9">
        <population spec='Population' type="@X" location="0"/>
      </lineageSeed>
      <lineageSeed spec='Individual' label="t10">
        <population spec='Population' type="@X" location="0"/>
      </lineageSeed>
    </initialState>

    <lineageEndCondition spec='LineageEndCondition' nLineages="1"/>

    <output spec='NexusOutput' fileName='true_tree.nexus' reverseTime='true'/>
  </tree>


  <!-- SEQUENCE SIMULATION -->

  <siteModel spec="SiteModel" id="defaultSiteModel" mutationRate="0.1">
    <substModel spec="JukesCantor"/>
  </siteModel>

  <data spec='beast.app.seqgen.SimulatedAlignment' id='simulated_alignment'
	data="@input_alignment"
	tree="@true_tree"
	sequencelength="2000"
	siteModel="@defaultSiteModel"
	outputFileName="true_alignment.xml">
    <sequence spec="Sequence" taxon="dummy" value="?" />
  </data>


  <!-- INFERENCE  -->

  <traitSet spec='TraitSet' id='traitSet'
	  traitname="discrete"
	  value="t1=1,
		 t2=1,
		 t3=1,
		 t4=0,
		 t5=0,
		 t6=0,
		 t7=0,
		 t8=0,
		 t9=0,
		 t10=0">
    <taxa spec='TaxonSet' alignment='@input_alignment'/>
  </traitSet>

  <!-- Migration model -->
  <migrationModel spec='MigrationModel' id='migModel'>
    <rateMatrix spec='RealParameter' value="0.0 1.0 1.0 0.0" dimension="4" minordimension="2" id="rateMatrix"/>
    <popSizes spec='RealParameter' value="1.0 1.0" dimension="2" id="popSizes"/>
  </migrationModel>

  <!-- Parameter priors -->
  <input spec='CompoundDistribution' id='parameterPriors'>
    <distribution spec='ExcludablePrior' x="@rateMatrix" xInclude="false true true false">
      <distr spec='LogNormalDistributionModel' meanInRealSpace="true" M="1.0" S="2.0"/>
    </distribution>
    <distribution spec='beast.math.distributions.Prior' x="@popSizes">
      <distr spec="LogNormalDistributionModel" meanInRealSpace="true" M="1.0" S="5.0"/>
    </distribution>
  </input>

  <!-- Probability of sequence data given tree -->
  <input spec='TreeLikelihood' id="treeLikelihood">
    <data idref="simulated_alignment"/>
    <tree idref="tree"/>
    <siteModel spec='SiteModel'>
      <substModel spec='JukesCantor'/>
    </siteModel>
  </input>
  
  <!-- Probability of tree given migration rates and population sizes -->
  <input spec='StructuredCoalescentLikelihood' id='treePrior'>
    <colouredTree idref="colouredTree"/>
    <migrationModel idref="migModel"/>
  </input>
  
  <run spec="MCMC" id="mcmc" chainLength="10000000">
    
    <init spec='StructuredCoalescentColouredTree' id='colouredTree'
	  nColours="2"
	  maxBranchColours="200"
	  figtreeCompatible="true">

      <tree spec="Tree" id="tree"/>
      <changeColours spec="IntegerParameter" id="changeColours" value="0"/>
      <changeTimes spec="RealParameter" id="changeTimes" value="0.0"/>
      <changeCounts spec="IntegerParameter" id="changeCounts" value="0"/>
      <nodeColours spec="IntegerParameter" id="nodeColours" value="0"/>

      <migrationModel idref='migModel'/>
      <traitSet idref='traitSet'/>
    </init>

    <state>
      <stateNode idref="tree"/>
      <stateNode idref="changeColours"/>
      <stateNode idref="changeTimes"/>
      <stateNode idref="changeCounts"/>
      <stateNode idref="nodeColours"/>
      <stateNode idref="rateMatrix"/>
      <stateNode idref="popSizes"/>
    </state>
    
    <distribution spec='CompoundDistribution' id='posterior'>
      <distribution idref="treeLikelihood"/>
      <distribution idref='treePrior'/>
      <distribution idref="parameterPriors"/>
    </distribution>

    <!-- parameter scaling operators -->
    <operator spec='ScaleOperator' id='RateScaler'
	      parameter="@rateMatrix"
	      scaleFactor="0.1" weight="1">
      <indicator spec='BooleanParameter' estimate="false" value="false true true false"/>
    </operator>

    <operator spec="ScaleOperator" id="PopSizeScaler"
	      parameter="@popSizes" scaleFactor="0.1" weight="1"/>
    
    <!-- Coloured tree operators -->
    <operator spec='ColouredSubtreeExchange' id='CSTX'
	      weight="1" colouredTree="@colouredTree"
	      migrationModel="@migModel"/>

    <operator spec="NodeRecolour" id="NR"
	      weight="1" colouredTree="@colouredTree"
	      migrationModel="@migModel"/>

    <operator spec="ColouredUniform" id="CU"
	      weight="1" colouredTree="@colouredTree"/>


    <operator spec="ColouredTreeScale" id="CTS"
	      weight="1" colouredTree="@colouredTree"
	      scaleFactor="1.1"/>

    <operator spec="ColouredWilsonBalding" id="CWB"
	      weight="1" colouredTree="@colouredTree"
	      migrationModel="@migModel" alpha="0.2"/>
    
    <logger logEvery="1000" fileName="combined.log">
      <model idref='posterior'/>
      <log idref="posterior"/>
      <log idref="popSizes"/>
      <log idref="rateMatrix"/>
      <log spec='beast.evolution.tree.TreeHeightLogger' tree='@tree'/>
    </logger>
    <logger logEvery="10000" fileName="combined.trees" mode="tree">
      <log idref="colouredTree"/>
    </logger>
    <logger logEvery="10000">
      <model idref='posterior'/>
      <log idref="posterior"/>
      <ESS spec='ESS' name='log' arg="@posterior"/>
    </logger>
  </run>
  
</beast>
