<beast version='2.0'
       namespace='beast.app.beauti:beast.core:beast.evolution.branchratemodel:beast.evolution.speciation:beast.evolution.tree.coalescent:beast.core.util:beast.evolution.nuc:beast.evolution.operators:beast.evolution.sitemodel:beast.evolution.substitutionmodel:beast.evolution.likelihood:beast.evolution:beast.math.distributions'
       templateinfo='template for structured coalescent analyses'>

       <map name='connect' reserved='true'>beast.app.beauti.BeautiConnector</map>
       <map name='subtemplate' reserved='true'>beast.app.beauti.BeautiSubTemplate</map>
       <map name='Uniform'>beast.math.distributions.Uniform</map>
       <map name='Normal'>beast.math.distributions.Normal</map>
       <map name='OneOnX'>beast.math.distributions.OneOnX</map>
       <map name='LogNormal'>beast.math.distributions.LogNormalDistributionModel</map>
       <map name='Exponential'>beast.math.distributions.Exponential</map>
       <map name='Gamma'>beast.math.distributions.Gamma</map>
       <map name='Beta'>beast.math.distributions.Beta</map>
       <map name='LaplaceDistribution'>beast.math.distributions.LaplaceDistribution</map>
       <map name='InverseGamma'>beast.math.distributions.InverseGamma</map>
       <map name='prior'>beast.math.distributions.Prior</map>

       <beauticonfig spec='BeautiConfig'
           collapsedPlugins = 'beast.core.MCMC.logger'
           inlinePlugins = 'beast.evolution.sitemodel.SiteModel.substModel'
           suppressPlugins = 'beast.core.MCMC.operator,
           beast.core.MCMC.operatorschedule,
           beast.core.MCMC.state,
           beast.core.MCMC.init,
           beast.core.MCMC.distribution,
           beast.evolution.substitutionmodel.WAG.rates,
           beast.evolution.substitutionmodel.WAG.frequencies,
           beast.evolution.substitutionmodel.JTT.rates,
           beast.evolution.substitutionmodel.JTT.frequencies,
           beast.evolution.substitutionmodel.Blosum62.rates,
           beast.evolution.substitutionmodel.Blosum62.frequencies,
           beast.evolution.substitutionmodel.Dayhoff.rates,
           beast.evolution.substitutionmodel.Dayhoff.frequencies,
           beast.evolution.substitutionmodel.CPREV.rates,
           beast.evolution.substitutionmodel.CPREV.frequencies,
           beast.evolution.substitutionmodel.MTREV.rates,
           beast.evolution.substitutionmodel.MTREV.frequencies,
           beast.evolution.substitutionmodel.GTR.rates,
           beast.evolution.substitutionmodel.JukesCantor.frequencies'>

        <panel spec='BeautiPanelConfig' panelname="Partitions" tiptext="Data Partitions"
            path='distribution/distribution[id="likelihood"]/distribution/data'
            hasPartitions="none" icon='2220.png.x' forceExpansion='FALSE'
            type='beast.evolution.alignment.Alignment'
            />

		<panel spec='BeautiPanelConfig' panelname="Tip Dates" tiptext="Allows to specify data that a taxon was sampled"
            path='tree'
            hasPartitions="Tree" icon='2.png.x' forceExpansion='TRUE'
            isVisible='true'
        />

        <panel spec='BeautiPanelConfig' panelname="Site Model" tiptext="Site model and substitution model specifications"
            path='siteModel'
            hasPartitions="SiteModel" icon='3.png.x' forceExpansion='TRUE'
            />

        <panel spec='BeautiPanelConfig' panelname="Clock Model" tiptext="Clock model"
            path='branchRateModel'
            hasPartitions="ClockModel" icon='4.png.x' forceExpansion='TRUE'
        />

        <panel spec='BeautiPanelConfig' panelname="Migration Model" tiptext="Migration model specifications"
            path='logger[id="tracelog"]/log[id="migModel"]'
            hasPartitions="none" icon='3.png.x' forceExpansion='TRUE'
            />

        <panel spec='BeautiPanelConfig' panelname="Priors" tiptext="Other priors"
            path='distribution/distribution[id="prior"]/distribution'
            hasPartitions="none" icon='7.png.x' forceExpansion='TRUE_START_COLLAPSED'
            type='beast.core.Distribution'
        />

        <panel spec='BeautiPanelConfig' panelname="Operators" tiptext="MCMC Operator details"
            path='operator'
            hasPartitions="none" icon='8.png.x' forceExpansion='TRUE_START_COLLAPSED'
            isVisible='false' buttonStatus='ADD_ONLY'
        />

		<panel spec='BeautiPanelConfig' panelname="MCMC" tiptext="MCMC parameters"
            path=''
            hasPartitions="none" icon='9.png.x' forceExpansion='TRUE'
            />

		<alignmentProvider id="Add Alignment" spec='BeautiAlignmentProvider' template='@StandardPartitionTemplate'/>

        <partitiontemplate id='StandardPartitionTemplate' spec='beast.app.beauti.BeautiSubTemplate' class='beast.evolution.likelihood.TreeLikelihood' mainid='mcmc'>
<![CDATA[

            <!-- site model                                                              -->
            <plugin spec='SiteModel' id="SiteModel.s:$(n)" gammaCategoryCount='0'>
                <!--substModel will be automatically detected /-->
                <proportionInvariant spec='parameter.RealParameter' id='proportionInvariant.s:$(n)' value='0.0' lower='0' upper='1' estimate='false'/>
                <mutationRate        spec='parameter.RealParameter' id='mutationRate.s:$(n)' value='1.0'        estimate='false'/>
                <shape               spec='parameter.RealParameter' id='gammaShape.s:$(n)' value='1.0'         estimate='false'/>
            </plugin>

            <plugin spec='TreeLikelihood' id="treeLikelihood.$(n)">
                <data idref="data"/>
                <tree idref="Tree.t:$(n)"/>
                <siteModel idref="SiteModel.s:$(n)"/>
                <branchRateModel spec='StrictClockModel' id='StrictClock.c:$(n)'>
                    <clock.rate id='clockRate.c:$(n)' spec='parameter.RealParameter' value='1.0' estimate='false'/>
                </branchRateModel>
            </plugin>

            <plugin spec='multitypetree.distributions.StructuredCoalescentTreeDensity' id="treePrior.$(n)">
                <multiTypeTree idref="Tree.t:$(n)"/>
                <migrationModel idref="migModel"/>
            </plugin>

            <!-- tree and its properties -->
            <plugin spec='beast.evolution.tree.StructuredCoalescentMultiTypeTree' id='Tree.t:$(n)' estimate='true'>
                <taxonset spec='beast.evolution.alignment.TaxonSet'>
                    <alignment idref='data'/>
                </taxonset>
                <migrationModel spec='beast.evolution.tree.MigrationModel'>
                    <rateMatrix spec='parameter.RealParameter' value="1.0" dimension="2"/>
                    <popSizes spec='parameter.RealParameter' value="1.0" dimension="2"/>
                </migrationModel>
            </plugin>

	        <prior id='MutationRatePrior.s:$(n)' x='@mutationRate.s:$(n)'><distr spec="beast.math.distributions.OneOnX"/></prior>
            <prior id='GammaShapePrior.s:$(n)' x='@gammaShape.s:$(n)'><distr spec="beast.math.distributions.Exponential" mean='1'/></prior>
            <prior id='PropInvariantPrior.t:$(n)' x='@proportionInvariant.s:$(n)'><distr spec="beast.math.distributions.Uniform" lower='0' upper='1'/></prior>
            
            <operator id='proportionInvariantScaler.s:$(n)' spec='ScaleOperator' scaleFactor="0.5" weight="0.1" parameter="@proportionInvariant.s:$(n)"/>
            <operator id='mutationRateScaler.s:$(n)' spec='ScaleOperator' scaleFactor="0.5" weight="0.1" parameter="@mutationRate.s:$(n)"/>
            <operator id='gammaShapeScaler.s:$(n)' spec='ScaleOperator' scaleFactor="0.5" weight="0.1" parameter="@gammaShape.s:$(n)"/>

]]>
            <connect srcID='treeLikelihood.$(n)' targetID='likelihood' inputName='distribution' if="isInitializing"/>
            <connect srcID='treePrior.$(n)' targetID='prior' inputName='distribution' if="isInitializing"/>
			<connect method="beast.app.beauti.SiteModelInputEditor.customConnector"/>
            <connect srcID='Tree.t:$(n)' targetID='state' inputName='stateNode' if='inposterior(Tree.t:$(n))'/>
            <connect srcID='mutationRate.s:$(n)' targetID='state' inputName='stateNode' if='inlikelihood(mutationRate.s:$(n)) and mutationRate.s:$(n)/estimate=true'/>

            <connect srcID='proportionInvariantScaler.s:$(n)' targetID='mcmc' inputName='operator' if='inlikelihood(proportionInvariant.s:$(n)) and proportionInvariant.s:$(n)/estimate=true'>Scales proportion of invariant sites parameter of partition $(n)</connect>
            <connect srcID='mutationRateScaler.s:$(n)'        targetID='mcmc' inputName='operator' if='nooperator(FixMeanMutationRatesOperator) and inlikelihood(mutationRate.s:$(n)) and mutationRate.s:$(n)/estimate=true'>Scales mutation rate of partition s:$(n)</connect>
            <connect srcID='gammaShapeScaler.s:$(n)'          targetID='mcmc' inputName='operator' if='inlikelihood(gammaShape.s:$(n)) and gammaShape.s:$(n)/estimate=true'>Scales gamma shape parameter of partition s:$(n)</connect>

            <connect srcID='proportionInvariant.s:$(n)'       targetID='state' inputName='stateNode' if='inlikelihood(proportionInvariant.s:$(n)) and proportionInvariant.s:$(n)/estimate=true'/>
            <connect srcID='mutationRate.s:$(n)'              targetID='state' inputName='stateNode' if='inlikelihood(mutationRate.s:$(n)) and mutationRate.s:$(n)/estimate=true'/>
            <connect srcID='gammaShape.s:$(n)'                targetID='state' inputName='stateNode' if='inlikelihood(gammaShape.s:$(n)) and gammaShape.s:$(n)/estimate=true'/>

            <connect srcID='MutationRatePrior.s:$(n)'         targetID='prior' inputName='distribution' if='nooperator(FixMeanMutationRatesOperator) and inlikelihood(mutationRate.s:$(n)) and mutationRate.s:$(n)/estimate=true'/>
            <connect srcID='GammaShapePrior.s:$(n)'           targetID='prior' inputName='distribution' if='inlikelihood(gammaShape.s:$(n)) and gammaShape.s:$(n)/estimate=true'>Prior on gamma shape for partition s:$(n)</connect>
            <connect srcID='PropInvariantPrior.s:$(n)'        targetID='prior' inputName='distribution' if='inlikelihood(proportionInvariant.s:$(n)) and proportionInvariant.s:$(n)/estimate=true'>Prior on proportion invariant for partition s:$(n)</connect>
        </partitiontemplate>

        <mergepoint id='substModelTemplates'/>
		<mergepoint id='clockModelTemplates'/>
        <mergepoint id='parametricDistributions'/>
    </beauticonfig>


<!-- framework for main model -->

    <migrationModel spec='beast.evolution.tree.MigrationModel' id="migModel">
        <rateMatrix spec='parameter.RealParameter' value="1.0 1.0" id="rateMatrix" estimate="false"/>
        <popSizes spec='parameter.RealParameter' value="1.0 1.0" id="popSizes" estimate="false"/>
    </migrationModel>

    <run spec="MCMC" id="mcmc" chainLength="10000000">

        <state storeEvery='5000' id='state'>
            <stateNode idref="rateMatrix"/>
            <stateNode idref="popSizes"/>
        </state>

        <distribution spec="CompoundDistribution" id="posterior">
            <distribution spec="CompoundDistribution" id="prior">
            </distribution>
            <distribution spec="CompoundDistribution" id="likelihood">
            </distribution>
        </distribution>

        <logger id='tracelog' logEvery="1000" fileName="$(filebase).log">
            <log idref="posterior"/>
            <log idref="likelihood"/>
            <log idref="prior"/>
            <log idref="migModel"/>
        </logger>

        <logger id='screenlog' logEvery="1000">
	        <!--model idref='posterior'/-->
            <log idref="posterior"/>
      	    <ESS spec='ESS' name='log' arg="@posterior"/>
            <log idref="likelihood"/>
            <log idref="prior"/>
            <log idref="migModel"/>
        </logger>
    </run>

</beast>

